<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="MenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>